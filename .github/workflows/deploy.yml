name: Deploy Micro Eternity AI System

on:
  push:
    branches:
      - main

jobs:
  build-backend:
    name: Build & Deploy Backend to AWS ECS
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Log in to AWS ECR
        run: |
          aws configure set aws_access_key_id ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws configure set aws_secret_access_key ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws configure set default.region us-east-1
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin ${{ secrets.AWS_ECR_REPOSITORY }}

      - name: Build and push Docker image to ECR
        run: |
          docker build -t micro-eternity-backend ./backend
          docker tag micro-eternity-backend:latest ${{ secrets.AWS_ECR_REPOSITORY }}:latest
          docker push ${{ secrets.AWS_ECR_REPOSITORY }}:latest

      - name: Deploy to AWS ECS
        run: |
          aws ecs update-service --cluster micro-eternity-cluster --service micro-eternity-service --force-new-deployment

  build-frontend:
    name: Deploy Frontend to Vercel
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Vercel CLI
        run: npm install -g vercel

      - name: Deploy to Vercel
        run: vercel --prod --token ${{ secrets.VERCEL_TOKEN }}
